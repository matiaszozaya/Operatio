@model IEnumerable<OperationViewModel>
@using Centvrio.Emoji;
@using MVC_App.Entities;

@{
    ViewData["Title"] = "Index";
    var lOperations = (List<OperationEntity>)ViewBag.Operations;

    decimal? totalARS = 0;
    decimal? totalUSD = 0;

    @foreach (var item in lOperations)
    {
        totalARS = totalARS + item.AmountARS;
        totalUSD = totalUSD + item.AmountUSD;
    }
}

@if (lOperations.Any())
{
    <img id="hero-img" src="~/assets/img/budget-planning.gif" style="max-width: 240px" />

    <h1 id="title">Operations Summary</h1>

    <div id="crud-options" class="d-flex align-items-center justify-content-center my-4">
        <a href="" class="fw-bold text-primary" data-bs-toggle="modal" data-bs-target="#create-modal"><i class="bi bi-plus-circle"></i> Add Operation</a>
        <span class="vr mx-2"></span>
        <a asp-action="LoadOperations" class="fw-bold text-success mx-2"><i class="bi bi-arrow-repeat"></i> Reload Template</a>
        <span class="vr mx-2"></span>
        <a asp-action="ClearOperations" class="fw-bold text-danger"><i class="bi bi-trash"></i> Remove all operations</a>
    </div>

    <table class="table table-hover w-75">
        <thead>
            <tr>
                <th class="d-none">
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Account)
                </th>
                <th>
                    Amount AR$
                </th>
                <th>
                    Amount USD$
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in lOperations)
            {
                <tr class="align-middle">
                    <td class="d-none">
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Account)
                    </td>
                    <td class="text-primary fw-bold">
                        AR$ @Html.DisplayFor(modelItem => item.AmountARS)
                    </td>
                    <td class="text-success fw-bold">
                        USD$ @Html.DisplayFor(modelItem => item.AmountUSD)
                    </td>
                    <td>
                        <button class="btn-primary btn-sm me-2 edit-btn" value="@item.Id">Edit</button>
                        <a href="/Operation/Delete?id=@item.Id" class="fw-bold text-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex align-items-center justify-content-center p-3 mb-3">
        <div class="badge bg-primary text-white p-3 me-3" style="font-size: 110%">AR$ @String.Format("{0:0.00}", totalARS)</div>
        <div class="badge bg-success p-3" style="font-size: 110%">USD$ @String.Format("{0:0.00}", totalUSD)</div>
    </div>

    <a id="export-to-excel" class="btn bg-success text-white ms-2">@BookPaper.PageWithCurl Save as .XLSX</a>

    <div id="create-modal" class="modal" tabindex="-1">
        <div class="modal-dialog modal-md modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Operation</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <partial name="_Create"/>
                </div>
            </div>
        </div>
    </div>

    <div id="edit-modal" class="modal" tabindex="-1">
        <div class="modal-dialog modal-md modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Operation</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="edit-modal-body" class="modal-body">
                    <div class="w-100">
                        <form id="Edit-Form">
                            <input id="Edit-Id" hidden />
                            <input id="Edit-Date" hidden />
                            <div class="form-group mb-3">
                                <label for="Edit-Type" class="fw-bold">Type</label>
                                <input id="Edit-Type" class="form-control" />
                            </div>
                            <div class="form-group mb-3">
                                <label for="Edit-Account" class="fw-bold">Account</label>
                                <input id="Edit-Account" class="form-control" />
                            </div>
                            <div class="form-group mb-3">
                                <label for="Edit-Description" class="fw-bold">Description</label>
                                <input id="Edit-Description" class="form-control" />
                            </div>
                            <div class="form-group mb-3">
                                <label for="Edit-AmountARS" class="fw-bold">AmountARS</label>
                                <input id="Edit-AmountARS" class="form-control" required />
                            </div>
                            <div class="form-group mb-3">
                                <label for="Edit-AmountUSD" class="fw-bold">AmountUSD</label>
                                <input id="Edit-AmountUSD" class="form-control" required />
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Save" class="btn bg-primary text-white" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="d-flex flex-column align-items-center mb-5">
        <h2 class="fw-bold text-primary">Oops!</h2>
        <p class="text-muted">There's no operations yet!</p>
        <img src="~/assets/img/error-305.gif" />
    </div>

    <a href="" data-bs-toggle="modal" data-bs-target="#create-modal" class="btn bg-primary text-white mb-3">Create your first operation</a>
    <a asp-action="LoadOperations" class="btn btn-outline-success">Load Template</a>

    <div id="create-modal" class="modal" tabindex="-1">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Operation</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <partial name="_Create" />
                </div>
                <div class="modal-footer bg-primary">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
    <script type="text/javascript">
        $("#export-to-excel").on("click", function () {
            let table = document.querySelector("table");
            let workbook = XLSX.utils.table_to_book(table, { sheet: "Operations" });
            XLSX.writeFile(workbook, "Operations.xlsx");
        });

        $(".edit-btn").click(function () {
            var id = $(this).val();
            var url = "/Operation/EditView?id=" + id;
                
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    $("#Edit-Id").val(data.id);
                    $("#Edit-Type").val(data.type);
                    $("#Edit-Account").val(data.account);
                    $("#Edit-Description").val(data.description);
                    $("#Edit-AmountARS").val(data.amountARS);
                    $("#Edit-AmountUSD").val(data.amountUSD);
                    $("#Edit-Date").val(data.date);

                    $("#edit-modal").modal("show");
                });
        });

        $("#Edit-Form").on("submit", function () {
            var url = "/Operation/Edit";
            var body = JSON.stringify
                ({
                    id: $("#Edit-Id").val(),
                    type: $("#Edit-Type").val(),
                    account: $("#Edit-Account").val(),
                    description: $("#Edit-Description").val(),
                    amountARS: $("#Edit-AmountARS").val(),
                    amountUSD: $("#Edit-AmountUSD").val(),
                    date: new Date(),
                });

            fetch(url, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: body,
            });
        });

        if (window.location.pathname.includes("Operation")) {
            $("#AmountARS, #Edit-AmountARS").on("change", function () {
                $("#AmountUSD, #Edit-AmountUSD").val(0);
            });

            $("#AmountUSD, #Edit-AmountUSD").on("change", function () {
                $("#AmountARS, #Edit-AmountARS").val(0);
            });
        }
    </script>
}